; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	E:\Jammei\SDL_Game\SDL_Game\UtilityCode.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?initRect@@YA?AUSDL_Rect@@FF@Z			; initRect
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File e:\jammei\sdl_game\sdl_game\utilitycode.cpp
;	COMDAT ?initRect@@YA?AUSDL_Rect@@FF@Z
_TEXT	SEGMENT
_tempRect$ = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
?initRect@@YA?AUSDL_Rect@@FF@Z PROC			; initRect, COMDAT

; 4    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5    : 	SDL_Rect tempRect;
; 6    : 	tempRect.x = x;

	movsx	eax, WORD PTR _x$[ebp]
	mov	DWORD PTR _tempRect$[ebp], eax

; 7    : 	tempRect.y = y;

	movsx	eax, WORD PTR _y$[ebp]
	mov	DWORD PTR _tempRect$[ebp+4], eax

; 8    : 	return tempRect;

	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _tempRect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tempRect$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _tempRect$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _tempRect$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T1[ebp]

; 9    : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@initRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@initRect:
	DD	1
	DD	$LN4@initRect
$LN4@initRect:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@initRect
$LN3@initRect:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?initRect@@YA?AUSDL_Rect@@FF@Z ENDP			; initRect
_TEXT	ENDS
END
